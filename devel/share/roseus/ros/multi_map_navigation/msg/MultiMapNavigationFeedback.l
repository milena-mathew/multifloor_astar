;; Auto-generated. Do not edit!


(when (boundp 'multi_map_navigation::MultiMapNavigationFeedback)
  (if (not (find-package "MULTI_MAP_NAVIGATION"))
    (make-package "MULTI_MAP_NAVIGATION"))
  (shadow 'MultiMapNavigationFeedback (find-package "MULTI_MAP_NAVIGATION")))
(unless (find-package "MULTI_MAP_NAVIGATION::MULTIMAPNAVIGATIONFEEDBACK")
  (make-package "MULTI_MAP_NAVIGATION::MULTIMAPNAVIGATIONFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude MultiMapNavigationFeedback.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass multi_map_navigation::MultiMapNavigationFeedback
  :super ros::object
  :slots (_base_position _current_map ))

(defmethod multi_map_navigation::MultiMapNavigationFeedback
  (:init
   (&key
    ((:base_position __base_position) (instance geometry_msgs::PoseStamped :init))
    ((:current_map __current_map) "")
    )
   (send-super :init)
   (setq _base_position __base_position)
   (setq _current_map (string __current_map))
   self)
  (:base_position
   (&rest __base_position)
   (if (keywordp (car __base_position))
       (send* _base_position __base_position)
     (progn
       (if __base_position (setq _base_position (car __base_position)))
       _base_position)))
  (:current_map
   (&optional __current_map)
   (if __current_map (setq _current_map __current_map)) _current_map)
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/PoseStamped _base_position
    (send _base_position :serialization-length)
    ;; string _current_map
    4 (length _current_map)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/PoseStamped _base_position
       (send _base_position :serialize s)
     ;; string _current_map
       (write-long (length _current_map) s) (princ _current_map s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/PoseStamped _base_position
     (send _base_position :deserialize buf ptr-) (incf ptr- (send _base_position :serialization-length))
   ;; string _current_map
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _current_map (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get multi_map_navigation::MultiMapNavigationFeedback :md5sum-) "eb14c278a594f8ede17a4a64e99892fa")
(setf (get multi_map_navigation::MultiMapNavigationFeedback :datatype-) "multi_map_navigation/MultiMapNavigationFeedback")
(setf (get multi_map_navigation::MultiMapNavigationFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
geometry_msgs/PoseStamped base_position
string current_map

================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :multi_map_navigation/MultiMapNavigationFeedback "eb14c278a594f8ede17a4a64e99892fa")


